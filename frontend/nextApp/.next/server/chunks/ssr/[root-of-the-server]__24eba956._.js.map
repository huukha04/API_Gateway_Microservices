{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/util/auth.ts"],"sourcesContent":["// auth.ts\r\n\r\nimport NextAuth from 'next-auth';\r\nimport GitHub from 'next-auth/providers/github';\r\nimport Credentials from 'next-auth/providers/credentials';\r\nimport type { Provider } from 'next-auth/providers';\r\n\r\nconst providers: Provider[] = [\r\n  GitHub({\r\n    clientId: process.env.GITHUB_ID,\r\n    clientSecret: process.env.GITHUB_SECRET,\r\n  }),\r\n  Credentials({\r\n    credentials: {\r\n      username: { label: 'Username', type: 'text' },\r\n      email: { label: 'Email Address', type: 'email' },\r\n      password: { label: 'Password', type: 'password' },\r\n    },\r\n    authorize(c) {\r\n      if (\r\n        c.password === '@demo1' && \r\n        c.email === 'toolpad-demo@mui.com' &&\r\n        c.username === 'toolpad-demo'\r\n      ) {\r\n        return {\r\n          id: 'test',\r\n          name: 'Toolpad Demo',\r\n          email: String(c.email),\r\n        };\r\n      }\r\n      return null;\r\n    },\r\n  }),\r\n];\r\n\r\nexport const providerMap = providers.map((provider) => {\r\n  if (typeof provider === 'function') {\r\n    const providerData = provider();\r\n    return { id: providerData.id, name: providerData.name };\r\n  }\r\n  return { id: provider.id, name: provider.name };\r\n});\r\n\r\nexport const { handlers, auth, signIn, signOut } = NextAuth({\r\n  providers,\r\n  secret: process.env.AUTH_SECRET,\r\n  pages: {\r\n    signIn: '/auth/login',\r\n  },\r\n  callbacks: {\r\n    authorized({ auth: session, request: { nextUrl } }) {\r\n      const isLoggedIn = !!session?.user;\r\n      const isPublicPage = nextUrl.pathname.startsWith('/public');\r\n\r\n      if (isPublicPage || isLoggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false; \r\n    },\r\n  },\r\n});\r\n"],"names":[],"mappings":"AAAA,UAAU;;;;;;;;AAEV;AAAA;AACA;AAAA;AACA;AAAA;;;;AAGA,MAAM,YAAwB;IAC5B,CAAA,GAAA,qJAAA,CAAA,UAAM,AAAD,EAAE;QACL,UAAU,QAAQ,GAAG,CAAC,SAAS;QAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;IACzC;IACA,CAAA,GAAA,0JAAA,CAAA,UAAW,AAAD,EAAE;QACV,aAAa;YACX,UAAU;gBAAE,OAAO;gBAAY,MAAM;YAAO;YAC5C,OAAO;gBAAE,OAAO;gBAAiB,MAAM;YAAQ;YAC/C,UAAU;gBAAE,OAAO;gBAAY,MAAM;YAAW;QAClD;QACA,WAAU,CAAC;YACT,IACE,EAAE,QAAQ,KAAK,YACf,EAAE,KAAK,KAAK,0BACZ,EAAE,QAAQ,KAAK,gBACf;gBACA,OAAO;oBACL,IAAI;oBACJ,MAAM;oBACN,OAAO,OAAO,EAAE,KAAK;gBACvB;YACF;YACA,OAAO;QACT;IACF;CACD;AAEM,MAAM,cAAc,UAAU,GAAG,CAAC,CAAC;IACxC,IAAI,OAAO,aAAa,YAAY;QAClC,MAAM,eAAe;QACrB,OAAO;YAAE,IAAI,aAAa,EAAE;YAAE,MAAM,aAAa,IAAI;QAAC;IACxD;IACA,OAAO;QAAE,IAAI,SAAS,EAAE;QAAE,MAAM,SAAS,IAAI;IAAC;AAChD;AAEO,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D;IACA,QAAQ,QAAQ,GAAG,CAAC,WAAW;IAC/B,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,YAAW,EAAE,MAAM,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YAChD,MAAM,aAAa,CAAC,CAAC,SAAS;YAC9B,MAAM,eAAe,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAEjD,IAAI,gBAAgB,YAAY;gBAC9B,OAAO;YACT;YAEA,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/app/auth/login/actions.ts"],"sourcesContent":["// app/auth/login/actions.ts\r\n'use server';\r\nimport { AuthError } from 'next-auth';\r\nimport type { AuthProvider } from '@toolpad/core';\r\nimport { signIn as signInAction } from '@/util/auth';\r\n\r\nasync function signIn(provider: AuthProvider, formData: FormData, callbackUrl?: string) {\r\n  try {\r\n    return await signInAction(provider.id, {\r\n      ...(formData && {\r\n        username: formData.get('username'),\r\n        email: formData.get('email'),\r\n        password: formData.get('password'),\r\n      }),\r\n      redirectTo: callbackUrl ?? '/',\r\n    });\r\n\r\n  } catch (error) {\r\n    // The desired flow for successful sign in in all cases\r\n    // and unsuccessful sign in for OAuth providers will cause a `redirect`,\r\n    // and `redirect` is a throwing function, so we need to re-throw\r\n    // to allow the redirect to happen\r\n    // Source: https://github.com/vercel/next.js/issues/49298#issuecomment-1542055642\r\n    // Detect a `NEXT_REDIRECT` error and re-throw it\r\n    if (error instanceof Error && error.message === 'NEXT_REDIRECT') {\r\n      throw error;\r\n    }\r\n    // Handle Auth.js errors\r\n    if (error instanceof AuthError) {\r\n      return {\r\n        error:\r\n          error.type === 'CredentialsSignin'\r\n            ? 'Invalid credentials.'\r\n            : 'An error with Auth.js occurred.',\r\n        type: error.type,\r\n      };\r\n    }\r\n    // An error boundary must exist to handle unknown errors\r\n    return {\r\n      error: 'Something went wrong.',\r\n      type: 'UnknownError',\r\n    };\r\n  }\r\n}\r\n\r\nexport default signIn;\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAE5B;AAAA;AAEA;;;;;;AAEA,eAAe,OAAO,QAAsB,EAAE,QAAkB,EAAE,WAAoB;IACpF,IAAI;QACF,OAAO,MAAM,CAAA,GAAA,mHAAA,CAAA,SAAY,AAAD,EAAE,SAAS,EAAE,EAAE;YACrC,GAAI,YAAY;gBACd,UAAU,SAAS,GAAG,CAAC;gBACvB,OAAO,SAAS,GAAG,CAAC;gBACpB,UAAU,SAAS,GAAG,CAAC;YACzB,CAAC;YACD,YAAY,eAAe;QAC7B;IAEF,EAAE,OAAO,OAAO;QACd,uDAAuD;QACvD,wEAAwE;QACxE,gEAAgE;QAChE,kCAAkC;QAClC,iFAAiF;QACjF,iDAAiD;QACjD,IAAI,iBAAiB,SAAS,MAAM,OAAO,KAAK,iBAAiB;YAC/D,MAAM;QACR;QACA,wBAAwB;QACxB,IAAI,iBAAiB,wIAAA,CAAA,YAAS,EAAE;YAC9B,OAAO;gBACL,OACE,MAAM,IAAI,KAAK,sBACX,yBACA;gBACN,MAAM,MAAM,IAAI;YAClB;QACF;QACA,wDAAwD;QACxD,OAAO;YACL,OAAO;YACP,MAAM;QACR;IACF;AACF;uCAEe;;;IAAA;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/.next-internal/server/app/auth/login/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {default as '7fffa6f1fe677dbd5292f87b2b70892ec3105933e0'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/app/auth/login/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/auth/login/login-form.tsx <module evaluation>\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mEACA","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/app/auth/login/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LoginForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoginForm() from the server but LoginForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/auth/login/login-form.tsx\",\n    \"LoginForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+CACA","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/app/auth/login/page.tsx"],"sourcesContent":["\"\"\r\nimport { LoginForm } from \"@/app/auth/login/login-form\"\r\nimport { useSession } from \"next-auth/react\"\r\nexport default function LoginPage() {\r\n    const { data: session} = useSession()\r\n  return (\r\n                  \r\n    <div className=\"bg-muted flex min-h-svh flex-col items-center justify-center p-6 md:p-10\">\r\n      <pre>{JSON.stringify(session, null, 2)}</pre>\r\n      <div className=\"w-full max-w-sm md:max-w-md\">\r\n        <LoginForm />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAGe,SAAS;IACpB,MAAM,EAAE,MAAM,OAAO,EAAC,GAAG,CAAA,GAAA,qIAAA,CAAA,aAAU,AAAD;IACpC,qBAEE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BAAK,KAAK,SAAS,CAAC,SAAS,MAAM;;;;;;0BACpC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,6IAAA,CAAA,YAAS;;;;;;;;;;;;;;;;AAIlB","debugId":null}}]
}