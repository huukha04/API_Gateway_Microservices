{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/components/provider/themeProvider.tsx"],"sourcesContent":["// app/provider/themeProvider.tsx\r\n\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\r\n\r\nexport function ThemeProvider({\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<typeof NextThemesProvider>) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\r\n}"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAIjC;AAHA;;;AAKO,SAAS,cAAc,EAC5B,QAAQ,EACR,GAAG,OAC6C;IAChD,qBAAO,6LAAC,mJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC;KALgB","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/components/provider/sessionProvider.tsx"],"sourcesContent":["// app/provider/sessionProvider.tsx\r\n\"use client\"\r\n\r\nimport { SessionProvider } from \"next-auth/react\"\r\nimport { ReactNode } from \"react\"\r\n\r\nexport function SessionProviders({ children }: { children: ReactNode }) {\r\n  return <SessionProvider>{children}</SessionProvider>\r\n}\r\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;;AAGnC;AAFA;;;AAKO,SAAS,iBAAiB,EAAE,QAAQ,EAA2B;IACpE,qBAAO,6LAAC,wIAAA,CAAA,kBAAe;kBAAE;;;;;;AAC3B;KAFgB","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/components/button/themeToggle.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useTheme } from \"next-themes\"\r\n\r\nimport { SunFilled, MoonFilled } from \"@ant-design/icons\" \r\nimport * as React from \"react\"\r\n\r\nexport function ThemeToggle() {\r\n  const { resolvedTheme, setTheme } = useTheme()\r\n  const [mounted, setMounted] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    setMounted(true)\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(resolvedTheme === \"dark\" ? \"light\" : \"dark\")\r\n  }\r\n\r\n  if (!mounted) return null \r\n\r\n  return (\r\n    <button\r\n      onClick={toggleTheme}\r\n      className=\"h-8 px-2.5 rounded-md gap-1.5 text-xl text-red-400 hover:text-red-500 dark:text-sky-400 dark:hover:text-sky-500 group has-[>svg]:px-2.5\"\r\n    >\r\n      {resolvedTheme === \"dark\" ? <MoonFilled /> : <SunFilled />}\r\n    </button>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAAA;AACA;;;AALA;;;;AAOO,SAAS;;IACd,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;iCAAE;YACd,WAAW;QACb;gCAAG,EAAE;IAEL,MAAM,cAAc;QAClB,SAAS,kBAAkB,SAAS,UAAU;IAChD;IAEA,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,6LAAC;QACC,SAAS;QACT,WAAU;kBAET,kBAAkB,uBAAS,6LAAC,iNAAA,CAAA,aAAU;;;;iCAAM,6LAAC,+MAAA,CAAA,YAAS;;;;;;;;;;AAG7D;GAtBgB;;QACsB,mJAAA,CAAA,WAAQ;;;KAD9B","debugId":null}}]
}