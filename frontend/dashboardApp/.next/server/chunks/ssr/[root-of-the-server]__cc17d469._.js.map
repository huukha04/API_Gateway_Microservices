{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/util/auth.ts"],"sourcesContent":["// auth.ts\r\n\r\nimport NextAuth from 'next-auth';\r\nimport GitHub from 'next-auth/providers/github';\r\nimport Credentials from 'next-auth/providers/credentials';\r\nimport type { Provider } from 'next-auth/providers';\r\n\r\nconst providers: Provider[] = [\r\n  GitHub({\r\n    clientId: process.env.GITHUB_ID,\r\n    clientSecret: process.env.GITHUB_SECRET,\r\n  }),\r\n  Credentials({\r\n    credentials: {\r\n      username: { label: 'Username', type: 'text' },\r\n      password: { label: 'Password', type: 'password' },\r\n    },\r\n    authorize: async (c) => {\r\n      const response = await fetch(`${process.env.API_GATEWAY_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: c?.username,\r\n          password: c?.password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Login response:', data);\r\n      const { user, loginToken, expiresIn } = data;\r\n\r\n      if (user) {\r\n        return {\r\n          id: user.id,\r\n          name: user.name,\r\n          email: user.email,\r\n          image: user.image || null,\r\n          token: loginToken || null,\r\n          expires: expiresIn || null,\r\n        };\r\n      }\r\n      if (\r\n        c?.password === '@demo1' && \r\n        c?.username === 'toolpad-demo'\r\n      ) {\r\n        return {\r\n          id: 'test',\r\n          name: 'Toolpad Demo',\r\n          email: 'toolpad-demo@mui.com',\r\n        };\r\n      }\r\n\r\n      return null;\r\n    },\r\n\r\n  }),\r\n];\r\n\r\nexport const providerMap = providers.map((provider) => {\r\n  if (typeof provider === 'function') {\r\n    const providerData = provider();\r\n    return { id: providerData.id, name: providerData.name };\r\n  }\r\n  return { id: provider.id, name: provider.name };\r\n});\r\n\r\nexport const { handlers, auth, signIn, signOut } = NextAuth({\r\n  providers,\r\n  secret: process.env.AUTH_SECRET,\r\n  pages: {\r\n    signIn: '/auth/login',\r\n  },\r\n  session: {\r\n    strategy: 'jwt',\r\n  },\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.id = user.id;\r\n        token.name = user.name;\r\n        token.email = user.email;\r\n        token.image = (user as any).image || null;\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }) {\r\n      if (token) {\r\n        session.user.id = token.id as string;\r\n        session.user.name = token.name as string;\r\n        session.user.email = token.email as string;\r\n        session.user.image = token.image as string;\r\n      }\r\n      return session;\r\n    },\r\n    authorized({ auth: session, request: { nextUrl } }) {\r\n      const isLoggedIn = !!session?.user;\r\n      const isPublicPage = nextUrl.pathname.startsWith('/public');\r\n      return isPublicPage || isLoggedIn;\r\n    },\r\n  },\r\n});\r\n\r\n"],"names":[],"mappings":"AAAA,UAAU;;;;;;;;AAEV;AAAA;AACA;AAAA;AACA;AAAA;;;;AAGA,MAAM,YAAwB;IAC5B,CAAA,GAAA,qJAAA,CAAA,UAAM,AAAD,EAAE;QACL,UAAU,QAAQ,GAAG,CAAC,SAAS;QAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;IACzC;IACA,CAAA,GAAA,0JAAA,CAAA,UAAW,AAAD,EAAE;QACV,aAAa;YACX,UAAU;gBAAE,OAAO;gBAAY,MAAM;YAAO;YAC5C,UAAU;gBAAE,OAAO;gBAAY,MAAM;YAAW;QAClD;QACA,WAAW,OAAO;YAChB,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE;gBACxE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,UAAU,GAAG;oBACb,UAAU,GAAG;gBACf;YACF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,mBAAmB;YAC/B,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG;YAExC,IAAI,MAAM;gBACR,OAAO;oBACL,IAAI,KAAK,EAAE;oBACX,MAAM,KAAK,IAAI;oBACf,OAAO,KAAK,KAAK;oBACjB,OAAO,KAAK,KAAK,IAAI;oBACrB,OAAO,cAAc;oBACrB,SAAS,aAAa;gBACxB;YACF;YACA,IACE,GAAG,aAAa,YAChB,GAAG,aAAa,gBAChB;gBACA,OAAO;oBACL,IAAI;oBACJ,MAAM;oBACN,OAAO;gBACT;YACF;YAEA,OAAO;QACT;IAEF;CACD;AAEM,MAAM,cAAc,UAAU,GAAG,CAAC,CAAC;IACxC,IAAI,OAAO,aAAa,YAAY;QAClC,MAAM,eAAe;QACrB,OAAO;YAAE,IAAI,aAAa,EAAE;YAAE,MAAM,aAAa,IAAI;QAAC;IACxD;IACA,OAAO;QAAE,IAAI,SAAS,EAAE;QAAE,MAAM,SAAS,IAAI;IAAC;AAChD;AAEO,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D;IACA,QAAQ,QAAQ,GAAG,CAAC,WAAW;IAC/B,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QACP,UAAU;IACZ;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,IAAI,GAAG,KAAK,IAAI;gBACtB,MAAM,KAAK,GAAG,KAAK,KAAK;gBACxB,MAAM,KAAK,GAAG,AAAC,KAAa,KAAK,IAAI;YACvC;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO;gBACT,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;gBAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;gBAChC,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;YAClC;YACA,OAAO;QACT;QACA,YAAW,EAAE,MAAM,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YAChD,MAAM,aAAa,CAAC,CAAC,SAAS;YAC9B,MAAM,eAAe,QAAQ,QAAQ,CAAC,UAAU,CAAC;YACjD,OAAO,gBAAgB;QACzB;IACF;AACF","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/app/auth/login/actions.ts"],"sourcesContent":["// app/auth/login/actions.ts\r\n'use server';import { AuthError } from 'next-auth';\r\nimport type { AuthProvider } from '@toolpad/core';\r\nimport { signIn as signInAction } from '@/util/auth';\r\nimport { signIn as nextAuthSignIn } from \"next-auth/react\";\r\nasync function signIn(provider: AuthProvider, formData: FormData, callbackUrl?: string) {\r\n  try {\r\n    if (provider.id === 'credentials') {\r\n      return await nextAuthSignIn('credentials', {\r\n        username: formData.get('username'),\r\n        password: formData.get('password'),\r\n        redirect: true,\r\n        callbackUrl: callbackUrl || '/',\r\n      });\r\n    }\r\n    return await signInAction(provider.id, {\r\n      ...(formData && {\r\n        username: formData.get('username'),\r\n        password: formData.get('password'),\r\n      }),\r\n      redirectTo: callbackUrl ?? '/',\r\n    });\r\n\r\n  } catch (error) {\r\n    // The desired flow for successful sign in in all cases\r\n    // and unsuccessful sign in for OAuth providers will cause a `redirect`,\r\n    // and `redirect` is a throwing function, so we need to re-throw\r\n    // to allow the redirect to happen\r\n    // Source: https://github.com/vercel/next.js/issues/49298#issuecomment-1542055642\r\n    // Detect a `NEXT_REDIRECT` error and re-throw it\r\n    if (error instanceof Error && error.message === 'NEXT_REDIRECT') {\r\n      throw error;\r\n    }\r\n    // Handle Auth.js errors\r\n    if (error instanceof AuthError) {\r\n      return {\r\n        error:\r\n          error.type === 'CredentialsSignin'\r\n            ? 'Invalid credentials.'\r\n            : 'An error with Auth.js occurred.',\r\n        type: error.type,\r\n      };\r\n    }\r\n    // An error boundary must exist to handle unknown errors\r\n    return {\r\n      error: 'Something went wrong.',\r\n      type: 'UnknownError',\r\n    };\r\n  }\r\n}\r\n\r\nexport default signIn;\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AACf;AAAA;AAEb;AACA;;;;;;;AACA,eAAe,OAAO,QAAsB,EAAE,QAAkB,EAAE,WAAoB;IACpF,IAAI;QACF,IAAI,SAAS,EAAE,KAAK,eAAe;YACjC,OAAO,MAAM,CAAA,GAAA,qIAAA,CAAA,SAAc,AAAD,EAAE,eAAe;gBACzC,UAAU,SAAS,GAAG,CAAC;gBACvB,UAAU,SAAS,GAAG,CAAC;gBACvB,UAAU;gBACV,aAAa,eAAe;YAC9B;QACF;QACA,OAAO,MAAM,CAAA,GAAA,mHAAA,CAAA,SAAY,AAAD,EAAE,SAAS,EAAE,EAAE;YACrC,GAAI,YAAY;gBACd,UAAU,SAAS,GAAG,CAAC;gBACvB,UAAU,SAAS,GAAG,CAAC;YACzB,CAAC;YACD,YAAY,eAAe;QAC7B;IAEF,EAAE,OAAO,OAAO;QACd,uDAAuD;QACvD,wEAAwE;QACxE,gEAAgE;QAChE,kCAAkC;QAClC,iFAAiF;QACjF,iDAAiD;QACjD,IAAI,iBAAiB,SAAS,MAAM,OAAO,KAAK,iBAAiB;YAC/D,MAAM;QACR;QACA,wBAAwB;QACxB,IAAI,iBAAiB,wIAAA,CAAA,YAAS,EAAE;YAC9B,OAAO;gBACL,OACE,MAAM,IAAI,KAAK,sBACX,yBACA;gBACN,MAAM,MAAM,IAAI;YAClB;QACF;QACA,wDAAwD;QACxD,OAAO;YACL,OAAO;YACP,MAAM;QACR;IACF;AACF;uCAEe;;;IAAA;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/.next-internal/server/app/auth/login/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {default as '7fffa6f1fe677dbd5292f87b2b70892ec3105933e0'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/app/auth/login/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/auth/login/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/auth/login/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/app/auth/login/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/auth/login/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/auth/login/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}