{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/auth.ts"],"sourcesContent":["// auth.ts\r\n\r\nimport NextAuth from 'next-auth';\r\nimport GitHub from 'next-auth/providers/github';\r\nimport Credentials from 'next-auth/providers/credentials';\r\nimport type { Provider } from 'next-auth/providers';\r\n\r\nconst providers: Provider[] = [\r\n  GitHub({\r\n    clientId: process.env.GITHUB_ID,\r\n    clientSecret: process.env.GITHUB_SECRET,\r\n  }),\r\n  Credentials({\r\n    credentials: {\r\n      username: { label: 'Username', type: 'text' },\r\n      email: { label: 'Email Address', type: 'email' },\r\n      password: { label: 'Password', type: 'password' },\r\n    },\r\n    authorize(c) {\r\n      if (\r\n        c.password === '@demo1' && \r\n        c.email === 'toolpad-demo@mui.com' &&\r\n        c.username === 'toolpad-demo'\r\n      ) {\r\n        return {\r\n          id: 'test',\r\n          name: 'Toolpad Demo',\r\n          email: String(c.email),\r\n        };\r\n      }\r\n      return null;\r\n    },\r\n  }),\r\n];\r\n\r\nexport const providerMap = providers.map((provider) => {\r\n  if (typeof provider === 'function') {\r\n    const providerData = provider();\r\n    return { id: providerData.id, name: providerData.name };\r\n  }\r\n  return { id: provider.id, name: provider.name };\r\n});\r\n\r\nexport const { handlers, auth, signIn, signOut } = NextAuth({\r\n  providers,\r\n  secret: process.env.AUTH_SECRET,\r\n  pages: {\r\n    signIn: '/auth/login',\r\n  },\r\n  callbacks: {\r\n    authorized({ auth: session, request: { nextUrl } }) {\r\n      const isLoggedIn = !!session?.user;\r\n      const isPublicPage = nextUrl.pathname.startsWith('/public');\r\n\r\n      if (isPublicPage || isLoggedIn) {\r\n        return true;\r\n      }\r\n\r\n      return false; \r\n    },\r\n  },\r\n});\r\n"],"names":[],"mappings":"AAAA,UAAU;;;;;;;;AAEV;AAAA;AACA;AAAA;AACA;AAAA;;;;AAGA,MAAM,YAAwB;IAC5B,CAAA,GAAA,uJAAA,CAAA,UAAM,AAAD,EAAE;QACL,UAAU,QAAQ,GAAG,CAAC,SAAS;QAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;IACzC;IACA,CAAA,GAAA,4JAAA,CAAA,UAAW,AAAD,EAAE;QACV,aAAa;YACX,UAAU;gBAAE,OAAO;gBAAY,MAAM;YAAO;YAC5C,OAAO;gBAAE,OAAO;gBAAiB,MAAM;YAAQ;YAC/C,UAAU;gBAAE,OAAO;gBAAY,MAAM;YAAW;QAClD;QACA,WAAU,CAAC;YACT,IACE,EAAE,QAAQ,KAAK,YACf,EAAE,KAAK,KAAK,0BACZ,EAAE,QAAQ,KAAK,gBACf;gBACA,OAAO;oBACL,IAAI;oBACJ,MAAM;oBACN,OAAO,OAAO,EAAE,KAAK;gBACvB;YACF;YACA,OAAO;QACT;IACF;CACD;AAEM,MAAM,cAAc,UAAU,GAAG,CAAC,CAAC;IACxC,IAAI,OAAO,aAAa,YAAY;QAClC,MAAM,eAAe;QACrB,OAAO;YAAE,IAAI,aAAa,EAAE;YAAE,MAAM,aAAa,IAAI;QAAC;IACxD;IACA,OAAO;QAAE,IAAI,SAAS,EAAE;QAAE,MAAM,SAAS,IAAI;IAAC;AAChD;AAEO,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uJAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D;IACA,QAAQ,QAAQ,GAAG,CAAC,WAAW;IAC/B,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,YAAW,EAAE,MAAM,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YAChD,MAAM,aAAa,CAAC,CAAC,SAAS;YAC9B,MAAM,eAAe,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAEjD,IAAI,gBAAgB,YAAY;gBAC9B,OAAO;YACT;YAEA,OAAO;QACT;IACF;AACF","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/khahu/Desktop/API_Gateway_Microservices/frontend/nextJS/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { handlers } from '../../../../auth';\r\n\r\nexport const { GET, POST } = handlers;\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,6GAAA,CAAA,WAAQ","debugId":null}}]
}